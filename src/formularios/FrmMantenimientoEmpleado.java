/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package formularios;

import javax.swing.JOptionPane;
import archivo.*;
import entidades.Empleado;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JPanel;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vr
 */
public class FrmMantenimientoEmpleado extends javax.swing.JFrame {

    /**
     * Creates new form FrmMantenimientoEmpleado
     */
    public FrmMantenimientoEmpleado() {
        initComponents();
                setLocationRelativeTo(null);
                 setTitle ("Ingreso_Consulta y Modificacion de Datos");
                setIconImage(new ImageIcon(getClass().getResource("/iconos/Save.png")).getImage());
        ((JPanel)getContentPane()).setOpaque(false);
        ImageIcon uno=new ImageIcon(this.getClass().getResource("/imagenes/azules.jpg"));
        JLabel Salir= new JLabel();
         Salir.setIcon(uno);
        getLayeredPane().add(Salir,JLayeredPane.FRAME_CONTENT_LAYER);
       Salir.setBounds(0,0,uno.getIconWidth(),uno.getIconHeight());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbTipo = new javax.swing.JComboBox();
        tfDescripcion = new javax.swing.JTextField();
        btnConsultar = new javax.swing.JButton();
        jspResultado = new javax.swing.JScrollPane();
        tbResultado = new javax.swing.JTable();
        btnIngresar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnTitulo5 = new javax.swing.JButton();
        btAtras = new javax.swing.JToggleButton();
        jlhora = new javax.swing.JLabel();
        jldata = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        cbTipo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cbTipo.setForeground(new java.awt.Color(0, 153, 153));
        cbTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TODOS", "ID", "NOMBRES", "APELLIDOS", "ESTADO_CIVIL", "DIRECCION_ACTUAL", "E_MAIL", "TELEFONO", "EDAD" }));
        cbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoActionPerformed(evt);
            }
        });

        tfDescripcion.setEditable(false);
        tfDescripcion.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N

        btnConsultar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnConsultar.setForeground(new java.awt.Color(0, 153, 153));
        btnConsultar.setText("CONSULTAR");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        tbResultado.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tbResultado.setForeground(new java.awt.Color(0, 153, 153));
        tbResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "            ID", "       NOMBRES", "       APELLIDOS", "    ESTADO_CIVIL", "  DIRECCION_ACTUAL", "        E_MAIL", "       TELEFONO", "        EDAD"
            }
        ));
        jspResultado.setViewportView(tbResultado);

        btnIngresar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnIngresar.setForeground(new java.awt.Color(0, 153, 153));
        btnIngresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/images_1.jpg"))); // NOI18N
        btnIngresar.setText("INGRESAR");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(0, 153, 153));
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/editar.png"))); // NOI18N
        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(0, 153, 153));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/salir1.JPG"))); // NOI18N
        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnTitulo5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnTitulo5.setForeground(new java.awt.Color(0, 153, 153));
        btnTitulo5.setText("::::::::INGRESO_CONSULTA _ MODIFICACION DE DATOS::::::::");

        btAtras.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btAtras.setForeground(new java.awt.Color(0, 153, 153));
        btAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/images_2.jpg"))); // NOI18N
        btAtras.setSelected(true);
        btAtras.setText("ATRAS");
        btAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtrasActionPerformed(evt);
            }
        });

        jlhora.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jlhora.setForeground(new java.awt.Color(0, 153, 153));
        jlhora.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlhora.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jldata.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jldata.setForeground(new java.awt.Color(0, 153, 153));
        jldata.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jldata.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(172, 172, 172)
                                .addComponent(btnTitulo5, javax.swing.GroupLayout.PREFERRED_SIZE, 799, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(269, 269, 269)
                                .addComponent(tfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(236, 236, 236)
                                .addComponent(btnConsultar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(btnIngresar)
                                .addGap(79, 79, 79)
                                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(76, 76, 76)
                                .addComponent(btAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(jldata, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(613, 613, 613)
                                .addComponent(jlhora, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 8, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jspResultado)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(btnTitulo5)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConsultar)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jspResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnIngresar)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAtras)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jldata, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlhora, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        // TODO add your handling code here:
        FrmIngresoEmpleado frm = new FrmIngresoEmpleado();
        frm.setVisible(true);
       // dispose();
    }//GEN-LAST:event_btnIngresarActionPerformed

    private boolean formularioConsultaValido(){
        String tipo = cbTipo.getSelectedItem().toString();
        String descripcion = tfDescripcion.getText();
        
        if(!tipo.equals("TODOS") && descripcion.equals("")){
            JOptionPane.showMessageDialog(this
                    , "Debe ingresar una descripción", "Consultar"
                    , JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        return true;    
    }
    
    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        // TODO add your handling code here:
         consultar();
        
    }             
        
        public void consultar(){
        if(formularioConsultaValido()){
            String tipo = cbTipo.getSelectedItem().toString();
            String descripcion = tfDescripcion.getText();
        
            try{
                ArrayList<Empleado> registros = Archivo.obtener_registros();
                ArrayList<Empleado> resultado = new ArrayList<Empleado>();
                
                if(tipo.equals("TODOS")){
                    resultado = registros;
                }else if(tipo.equals("ID")){
                
                    for (int i = 0; i < registros.size(); i++) {
                        if(registros.get(i).getId().toUpperCase().contains(descripcion.toUpperCase()) ){
                            resultado.add(registros.get(i));
                        }
                    }
                
                }else if(tipo.equals("NOMBRES")){
                
                    for (int i = 0; i < registros.size(); i++) {
                        if(registros.get(i).getNombres().toUpperCase().contains(descripcion.toUpperCase()) ){
                            resultado.add(registros.get(i));
 }
                    }
                
                
                 }else if(tipo.equals("APELLIDOS")){
                
                    for (int i = 0; i < registros.size(); i++) {
                        if(registros.get(i).getApellidos().toUpperCase().contains(descripcion.toUpperCase()) ){
                            resultado.add(registros.get(i));
                        }
                    }
                    }else if(tipo.equals("ESTADO_CIVIL")){
                    for (int i = 0; i < registros.size(); i++) {
                        if(registros.get(i).getEstado_civil().toUpperCase().contains(descripcion.toUpperCase()) ){
                            resultado.add(registros.get(i));
                        }
                    }
                    }else if(tipo.equals("DIRECCION_ACTUAL")){
                
                    for (int i = 0; i < registros.size(); i++) {
                        if(registros.get(i).getDireccion_actual().toUpperCase().contains(descripcion.toUpperCase()) ){
                            resultado.add(registros.get(i));
                        }
                    }
                    }else if(tipo.equals("E_MAIL")){
                
                    for (int i = 0; i < registros.size(); i++) {
                        if(registros.get(i).getE_mail().toUpperCase().contains(descripcion.toUpperCase()) ){
                            resultado.add(registros.get(i));
                        }
                    }
                    }else if(tipo.equals("TELEFONO")){
                
                    for (int i = 0; i < registros.size(); i++) {
                        if(registros.get(i).getTelefono().toUpperCase().contains(descripcion.toUpperCase()) ){
                            resultado.add(registros.get(i));
                        }
                    }
                
                
                }else if(tipo.equals("EDAD")){
                
                    for (int i = 0; i < registros.size(); i++) { 
                        if(Integer.parseInt(descripcion)==registros.get(i).getEdad() ){
                            resultado.add(registros.get(i));
                        }
                    }
                }
                
                DefaultTableModel dtm = (DefaultTableModel)tbResultado.getModel();
                dtm.setRowCount(0);
                
                for (int i = 0; i < resultado.size(); i++) {                    
                    Vector fila = new Vector();
                    fila.add(resultado.get(i).getId());
                    fila.add(resultado.get(i).getNombres());
                    fila.add(resultado.get(i).getApellidos());
                    fila.add(resultado.get(i).getEstado_civil());
                    fila.add(resultado.get(i).getDireccion_actual());
                    fila.add(resultado.get(i).getE_mail());
                    fila.add(resultado.get(i).getTelefono());      
                    fila.add(resultado.get(i).getEdad());
                    dtm.addRow(fila);                    
                }
                
                
                
                
                
            }catch(Exception e){
                JOptionPane.showMessageDialog(this
                    , "Error al consultar", "Consultar"
                    , JOptionPane.ERROR_MESSAGE);            
            }    
        
        }
        
    }//GEN-LAST:event_btnConsultarActionPerformed

        
        private boolean seleccionEdicionValida(){
        int nfilas = tbResultado.getSelectedRowCount();
        if(nfilas!=1){
            JOptionPane.showMessageDialog(this,
                    "Debe seleccionar un registro a editar",
                    "Edición",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        return true;
    }
    
        
        
        
        
        
        
        
    private void cbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoActionPerformed
        // TODO add your handling code here:
        String tipo = (String)cbTipo.getSelectedItem();
        if(!tipo.equals("TODOS")){
            tfDescripcion.setEditable(true);
        }else{
            tfDescripcion.setEditable(false);
        }
        tfDescripcion.setText(null);
                  
        
        
        
        
    }//GEN-LAST:event_cbTipoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        if(seleccionEdicionValida()){
            Empleado e = null;
            int fila = tbResultado.getSelectedRow();
            int col = 0;
            String id =tbResultado.getValueAt(fila, col).toString();
            try{
                ArrayList<Empleado> registros = Archivo.obtener_registros();
                for (int i = 0; i < registros.size(); i++) {
                    if(registros.get(i).getId().equals(id)){
                        e = registros.get(i);
                    }
                }
            }catch(Exception e1){
                JOptionPane.showMessageDialog(this,
                        "Ocurrió un error al consultar los datos del empleado",
                        "Edición",
                        JOptionPane.ERROR_MESSAGE);
            }    
            
            if(e==null){
                JOptionPane.showMessageDialog(this
                        , "El registro seleccionado no existe"
                        , "Edición"
                        , JOptionPane.ERROR_MESSAGE);            
            }else{
                FrmEdicionEmpleado frm = new FrmEdicionEmpleado(e,this);  //FrmEdicionEmpleado(e,this);
                frm.setVisible(true);            
            }
        
         }
        
        
    }//GEN-LAST:event_btnEditarActionPerformed
private boolean seleccionEliminacionValida(){
        int nfilas = tbResultado.getSelectedRowCount();
        if(nfilas<1){
            JOptionPane.showMessageDialog(this
                    , "Debe seleccionar mínimo un registro a eliminar"
                    , "Eliminación"
                    , JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    
    private boolean confirmacionEliminacion(){
        int opcion = JOptionPane.showConfirmDialog(this
                , "Está seguro de realizar la eliminación"
                , "Eliminación"
                , JOptionPane.YES_NO_OPTION);
        
        if(opcion==1){
            return false;
        }
        return true;
    }
    
    
    
    
    
    
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        if(seleccionEliminacionValida()){
            if(confirmacionEliminacion()){
            


                try{

                    int filas[] = tbResultado.getSelectedRows();
                    ArrayList<Empleado> registros = Archivo.obtener_registros();

                    
                    for (int i = 0; i < filas.length; i++) {
                        int fila = filas[i];
                        
                        
                        String id = (String)tbResultado.getValueAt(fila,0);
                        for(Empleado e:registros){
                            if(e.getId().equals(id)){
                                registros.remove(e);
                                break;
                            }
                        }  
                    }
                    
                    
                    for(int fila:filas){
                         
                    }

                    if(Archivo.actualizar_registros(registros)){
                        JOptionPane.showMessageDialog(this
                                , "Se realizó la eliminación con éxito"
                                , "Eliminación"
                                , JOptionPane.INFORMATION_MESSAGE);
                        consultar();
                    }else{
                        JOptionPane.showMessageDialog(this
                                , "Ocurrió un error en la eliminación"
                                , "Eliminación"
                                , JOptionPane.ERROR_MESSAGE);
                    }

                }catch(Exception error){
                    JOptionPane.showMessageDialog(this
                            , "Ocurrió un error en la eliminación"
                            , "Eliminación"
                            , JOptionPane.ERROR_MESSAGE);

                }
            }
        }
                                               

        
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtrasActionPerformed

        
// TODO add your handling code here:
        
        
           FrmPrincipal frm = new FrmPrincipal();
        frm.setVisible(true);
        setLocationRelativeTo(null);    //centrar y no salga en la ezquina
        //dispose();
        

    }//GEN-LAST:event_btAtrasActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
       //data
   Date dataSistema = new Date();
   SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
    jldata.setText(formato.format(dataSistema));

//hora
Timer timer =new Timer(1000 ,new hora());
timer.start();
 
        
    }//GEN-LAST:event_formWindowOpened


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btAtras;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JButton btnTitulo5;
    private javax.swing.JComboBox cbTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jldata;
    private javax.swing.JLabel jlhora;
    private javax.swing.JScrollPane jspResultado;
    private javax.swing.JTable tbResultado;
    private javax.swing.JTextField tfDescripcion;
    // End of variables declaration//GEN-END:variables



class hora implements ActionListener{
    public void actionPerformed(ActionEvent e){
        Calendar now = Calendar.getInstance();
jlhora.setText(String.format("%1$tH:%1$tM:%1$tS", now));
}
    }
}


